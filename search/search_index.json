{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83e\udd14 Have you ever had a hard time deciding where to eat? \ud83d\udcb5 Do you want to support small businesses? \ud83d\udc95 Do you like dating apps? \ud83d\ude0a yumz brings you to an effortless approach to match you with the meal of your destiny! By using your current location, you can swipe right on the food you like. We'll pick up on your interests and suggest a small business with tasty meals. Contributors This project was inspired by \u2728Lucy\u2728. Made with lots of love by: Corey Patrick Nathan John What we're made of \u26cf Back-end You can reach our REST API here Framework: FastAPI Database: SQLite Database API: SQLAlchemy Hosting: Amazon Web Services EC2 Web Server: NGINX Resources: Yelp Fusion ( GraphQL Endpoint ) \ud83c\udf1f Front-end You can reach our React app here Framework/Library: React.js Hosting: Netfly \ud83d\udcdc Documentation Framework: Material for MkDocs Hosting: Github Pages via Github Actions","title":"Home"},{"location":"#contributors","text":"This project was inspired by \u2728Lucy\u2728. Made with lots of love by: Corey Patrick Nathan John","title":"Contributors"},{"location":"#what-were-made-of","text":"","title":"What we're made of"},{"location":"#back-end","text":"You can reach our REST API here Framework: FastAPI Database: SQLite Database API: SQLAlchemy Hosting: Amazon Web Services EC2 Web Server: NGINX Resources: Yelp Fusion ( GraphQL Endpoint )","title":"\u26cf Back-end"},{"location":"#front-end","text":"You can reach our React app here Framework/Library: React.js Hosting: Netfly","title":"\ud83c\udf1f Front-end"},{"location":"#documentation","text":"Framework: Material for MkDocs Hosting: Github Pages via Github Actions","title":"\ud83d\udcdc Documentation"},{"location":"Back-end/Intro/","text":"Intro to the Back-end Learn more about our back-end approach here. Framework \u2692 Our back-end is built using the \u26a1 FastAPI \u26a1 framework. We definitely would not have a fully functioning REST API (with documentation! ) if it wasn't for FastAPI's tool and aim to speed up development. OpenAPI standards enforced along with automatic Swagger documentation. This was an important feature for our front-end team to learn how to communicate with our API. ORM support between database models and API response schemas. This is done through SQLALchemy (database API) and Pydantic (schema library). FastAPI is ready for production! Unlike other python frameworks, FastAPI is easily ready for production with minimal changes. Uvicorn helps this process as it runs FastAPI on an ASGI server. Deployment \ud83d\udce4 Our back-end is deployed using AWS EC2 , along with an NGINX webserver . AWS EC2 allows us to easily scale our website. It offers more control over how our app is served and has better pricing in the long-run. NGINX is easier to learn than Apache as a college student with little background in XML syntax. You can check out our REST API here . We get most of our data by quering Yelp's GraphQL API .","title":"Intro to the Back-end"},{"location":"Back-end/Intro/#intro-to-the-back-end","text":"Learn more about our back-end approach here.","title":"Intro to the Back-end"},{"location":"Back-end/Intro/#framework","text":"\u2692 Our back-end is built using the \u26a1 FastAPI \u26a1 framework. We definitely would not have a fully functioning REST API (with documentation! ) if it wasn't for FastAPI's tool and aim to speed up development. OpenAPI standards enforced along with automatic Swagger documentation. This was an important feature for our front-end team to learn how to communicate with our API. ORM support between database models and API response schemas. This is done through SQLALchemy (database API) and Pydantic (schema library). FastAPI is ready for production! Unlike other python frameworks, FastAPI is easily ready for production with minimal changes. Uvicorn helps this process as it runs FastAPI on an ASGI server.","title":"Framework"},{"location":"Back-end/Intro/#deployment","text":"\ud83d\udce4 Our back-end is deployed using AWS EC2 , along with an NGINX webserver . AWS EC2 allows us to easily scale our website. It offers more control over how our app is served and has better pricing in the long-run. NGINX is easier to learn than Apache as a college student with little background in XML syntax. You can check out our REST API here . We get most of our data by quering Yelp's GraphQL API .","title":"Deployment"},{"location":"Back-end/run_locally/","text":"Run the Back-end Locally Install and run locally. \ud83d\udc69\u200d\ud83d\udc67 Clone repository $ git clone https://github.com/Acts-College-Ministry/yumz ---> 100% Navigate into the repository $ cd yumz // Now you are in the repostiory \ud83d\ude01 Navigate to yumz/backend $ cd yumz // Now you are in our main app folder \ud83d\ude0e $ cd backend // Now you are in our back-end app folder \ud83d\udc69\u200d\ud83d\udcbb You should find yourself here: repository \u2514\u2500\u2500\u2500yumz \u2514\u2500\u2500\u2500backend <-- you are here \ud83d\udc0d Create Python virtual environment There are a good amount of depencies for this project -- it will be good practice to use a virtual environment, albeit not necessary. macOS/Linux python3 -m venv env Windows Command Line python -m venv env Windows Powershell python -m venv env The last argument is the location to create the virtual environment. Generally, you can just create this in your project and call it env. \u2705 Activate virtual environment macOS/Linux source env/bin/activate Windows Command Line .\\env\\Scripts\\activate.bat Windows Powershell .\\env\\Scripts\\activate.ps1 \ud83d\udce6 Install packages $ python -m pip install -r requirements.txt ---> 100% Running the Backend API \ud83e\udd84 Run Fast API using uvicorn $ uvicorn app.main:app --reload \u2190[32mINFO\u2190[0m: Uvicorn running on \u2190[1mhttp://127.0.0.1:8000\u2190[0m (Press CTRL+C to quit) \u2190[32mINFO\u2190[0m: Started reloader process [\u2190[36m\u2190[1m38240\u2190[0m] using \u2190[36m\u2190[1mstatreload\u2190[0m \u2190[32mINFO\u2190[0m: Started server process [\u2190[36m13020\u2190[0m] \u2190[32mINFO\u2190[0m: Waiting for application startup. \u2190[32mINFO\u2190[0m: Application startup complete.","title":"Run the Back-end Locally"},{"location":"Back-end/run_locally/#run-the-back-end-locally","text":"Install and run locally. \ud83d\udc69\u200d\ud83d\udc67 Clone repository $ git clone https://github.com/Acts-College-Ministry/yumz ---> 100% Navigate into the repository $ cd yumz // Now you are in the repostiory \ud83d\ude01 Navigate to yumz/backend $ cd yumz // Now you are in our main app folder \ud83d\ude0e $ cd backend // Now you are in our back-end app folder \ud83d\udc69\u200d\ud83d\udcbb You should find yourself here: repository \u2514\u2500\u2500\u2500yumz \u2514\u2500\u2500\u2500backend <-- you are here \ud83d\udc0d Create Python virtual environment There are a good amount of depencies for this project -- it will be good practice to use a virtual environment, albeit not necessary. macOS/Linux python3 -m venv env Windows Command Line python -m venv env Windows Powershell python -m venv env The last argument is the location to create the virtual environment. Generally, you can just create this in your project and call it env. \u2705 Activate virtual environment macOS/Linux source env/bin/activate Windows Command Line .\\env\\Scripts\\activate.bat Windows Powershell .\\env\\Scripts\\activate.ps1 \ud83d\udce6 Install packages $ python -m pip install -r requirements.txt ---> 100%","title":"Run the Back-end Locally"},{"location":"Back-end/run_locally/#running-the-backend-api","text":"\ud83e\udd84 Run Fast API using uvicorn $ uvicorn app.main:app --reload \u2190[32mINFO\u2190[0m: Uvicorn running on \u2190[1mhttp://127.0.0.1:8000\u2190[0m (Press CTRL+C to quit) \u2190[32mINFO\u2190[0m: Started reloader process [\u2190[36m\u2190[1m38240\u2190[0m] using \u2190[36m\u2190[1mstatreload\u2190[0m \u2190[32mINFO\u2190[0m: Started server process [\u2190[36m13020\u2190[0m] \u2190[32mINFO\u2190[0m: Waiting for application startup. \u2190[32mINFO\u2190[0m: Application startup complete.","title":"Running the Backend API"},{"location":"Front-end/intro/","text":"Intro to the Front-end \u2692 Our front-end is built with LOTS of love through the React.js library and framework. You can check out our website here","title":"Intro to the Front-end"},{"location":"Front-end/intro/#intro-to-the-front-end","text":"\u2692 Our front-end is built with LOTS of love through the React.js library and framework. You can check out our website here","title":"Intro to the Front-end"},{"location":"Front-end/run_locally/","text":"Install and the Front-end run locally. \ud83d\udc69\u200d\ud83d\udc67 Clone repository $ git clone https://github.com/Acts-College-Ministry/yumz ---> 100% Navigate into the repository $ cd yumz // Now you are in the repostiory \ud83d\ude01 Navigate to yumz/frontend $ cd yumz // Now you are in our main app folder \ud83d\ude0e $ cd frontend // Now you are in our front-end app folder \ud83c\udf1f You should find yourself here: repository \u2514\u2500\u2500\u2500yumz \u2514\u2500\u2500\u2500frontend<-- you are here \ud83d\udce6 Install packages $ npm install ---> 100% added 1997 packages from 815 contributors and audited 2000 packages in 71.957s 132 packages are looking for funding run `npm fund` for details found 0 vulnerabilities \ud83c\udfc3\u200d\u2640\ufe0f Run our React App $ npm start Starting the development server... ---> 100%","title":"Install and the Front-end run locally."},{"location":"Front-end/run_locally/#install-and-the-front-end-run-locally","text":"\ud83d\udc69\u200d\ud83d\udc67 Clone repository $ git clone https://github.com/Acts-College-Ministry/yumz ---> 100% Navigate into the repository $ cd yumz // Now you are in the repostiory \ud83d\ude01 Navigate to yumz/frontend $ cd yumz // Now you are in our main app folder \ud83d\ude0e $ cd frontend // Now you are in our front-end app folder \ud83c\udf1f You should find yourself here: repository \u2514\u2500\u2500\u2500yumz \u2514\u2500\u2500\u2500frontend<-- you are here \ud83d\udce6 Install packages $ npm install ---> 100% added 1997 packages from 815 contributors and audited 2000 packages in 71.957s 132 packages are looking for funding run `npm fund` for details found 0 vulnerabilities \ud83c\udfc3\u200d\u2640\ufe0f Run our React App $ npm start Starting the development server... ---> 100%","title":"Install and the Front-end run locally."}]}